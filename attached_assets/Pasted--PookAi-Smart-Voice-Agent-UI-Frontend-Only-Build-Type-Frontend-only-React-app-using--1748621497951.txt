### 🚀 PookAi — Smart Voice Agent UI (Frontend Only)

**Build Type:** Frontend-only React app using ShadCN, TailwindCSS, TypeScript
**Vibe:** Premium, dark-mode-first, clean UX like Superhuman x CRED x Humane

---

### 🎯 What We’re Building

A **voice-first productivity AI assistant** that scans your inbox, detects newsletters, events, spam, and missed meetings — and then **calls you every day** to remind you of what actually matters.

Think: “If AI calls are inevitable, let’s make them useful.”

---

### 👤 User Journey (Simplified Flow)

1. **Landing Page**

   * Dark, premium aesthetic
   * “Connect Gmail” / “Connect Work Email” button
   * Clean animations, privacy-first tone

2. **Email Scan View**

   * Dummy data shown (we’ll wire real Gmail later)
   * Summary card examples:

     * “You’ve subscribed to 50 newsletters”
     * “Missed 3 meetings this week”
     * “Spammed by 10 sources”
   * Each summary item is **selectable**

     * User can **click or speak** to say what’s important
     * Selected items move to a personalized priority box

3. **Personalization & Prompt Box**

   * Always-visible prompt input (voice/text)
   * Ask: *“What’s important to you?”* + *“Describe your day”*
   * AI uses this to refine what user wants daily alerts/calls for
   * Final dashboard with:

     * What you'll be reminded about
     * Whether it’ll be a **call** or **notification**

4. **Call Configuration**

   * Select AI voice (English celeb-style voices)
   * Pick preferred daily call time
   * Verify phone via Twilio

5. **Final Setup View**

   * Confirmation message
   * Scheduled time for first call
   * Simple dashboard preview

---

### 📦 What To Do

* Set up frontend using ShadCN CLI (with Tailwind & TypeScript)
* Place all UI components under `/components/ui`
* Use `agent-plan.tsx` for main dashboard/roadmap component
* Populate inbox scan view with dummy data simulating:

  * Real inbox noise
  * Missed meetings
  * Workshop invites
  * Newsletter clutter

---

### ✅ Reminder

* Only frontend needed — backend will be added via Git by Tushar
* Dummy emails go in the **same data structure** where real emails will land
* Prioritize responsiveness, clean transitions, and UX clarity