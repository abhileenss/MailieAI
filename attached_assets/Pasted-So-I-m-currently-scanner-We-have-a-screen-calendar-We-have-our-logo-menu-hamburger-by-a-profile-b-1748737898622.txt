So I'm currently scanner. We have a screen calendar. We have our logo menu, hamburger by a profile button. Hamburger menu will be replaced by a profile button. Profile button will have just a drop down which only says dashboard and logout only those things. Once the person is logged in then it will be profile. Otherwise it will be just the Hamburger Menu that's Or not even a hamburger menu. Just a CT icon on top of that, nothing else. Okay, skip. Then it will be a hero section. Hero section will have the same CTA that we are having currently. That's not an issue. And basically the basic landing page, a very basic landing page that we have currently which we can change later. Now once the user logs in or once the user clicks on connect my whatever account is there then we would need to go to the auth screen. We'll authorize it and stuff. Thats not a problem. Then we would need to process the email so that we have a loading screen that is also done. Thats not showing. That's not showing. Thats not, that's not a real problem. That's showing. Currently what we can do is we can probably like have a delay of some amount of time. We can see how we can actually measure the promises. We can measure it by the way, that's, that's not an issue. So basically what we can do is we can have a callback mechanism wherein we can call the particular API until it sends the say for example intel sends back the output. We won't be showing the user 100% but instead what we can do is how progress bars works. Also that you usually send the data in chunks. So if one process is complete then you send the data as 25% and stuff like that. Or we can just have it very arbitrary so it doesn't show anything. Once it's done 100% we'll just have it 100%. Or matter of fact we even don't need to do that. What we can do is how credit does it. It doesn't show any progress. What it shows is prompts that your data is getting processed. This is happening, this is happening. So say for example you have eight of them and those cycle out in like three or four seconds. So user think that something is happening. Even if the data is returned in say about 10 seconds. Two prompts only run if the data is returned 40 seconds. Eight prompts run if the data is returned in 50 seconds you cycle the prompts again. Eight to 10 prompts are enough. 50 seconds, more than 50 seconds the data would be there. Right? That's the one thing. Then what it will do is after that we have the dashboard screen. Dashboard screen will be replaced by our current screen of that we have already passed your emails and these are the senders and what do you want to do with those senders? And we will try to have those labeled in some buckets that we have already created. Those buckets will be creating by ourselves which are currently in the configure. Not even in the configure one. I'm not really sure these are. The buckets are basically the ones that we want the one way. So basically what he's trying to say is key. There are Basically we have done categorization then we have put in bucket. So what we'll do is we'll give user some already created buckets where user can click key. Okay, this I want, this I don't want. But AI will personalize whatever chat GPT is thinking and giving that that it will personalize. Right. So the buckets that we're creating are based on essentially what users would want. What, what kind of emails are user getting? If those are payments, emails for a founder, payments then customer complaints. These are very important. We can categorize for a founder. We can have those buckets as yc as some newsletters for a very layman personal newsletters and any updates that he, that they are getting. We can also categorize them based on OTPs, any OTPs, any payment transactions. OTPs we cannot take but OTPs we. Should, we don't need to. We. So essentially we would be taking OTPs because they are authorizing us and we are parsing all the emails. But on the same part we would be using encrypted data at some point. These are some privacy concerns that we would need to address later on if there is any OTP we. Don't worry about that. Okay. Makes sense. What we can do is do not write any code until you summarize. And then ask it to summarize, then ask it to work on these actions. Work on these actions. And you can obviously see any Everything on replit. Job. Dijaria This is a. I'm telling you yes, per record. You are asking. All right, so apart from that, sorry, we digressed Abi on the app you told what we need to do. Apart from that before 11 labs, we need a call script. So for the call script, what do we need? So dashboard comes, I'll just summarize person clicks or connect my Gmail O happens after that he gets all screen where he is. Your these things are getting passed and with a good animation he gets it right that we have already have. After that we need to tell him all the data that you have. This many emails from this, this many emails from this, this many are spam like we already made. Right? Right, exactly. On top of that, what we want is we want those email names to usually have labels. Say for example, you have three mails from McKinsey. The McKinsey team is just mailing you regarding their updates. So we can just tag those in buckets as updates. That will be much easier. Instead of categorizing, say for example, you have promotional emails from Zomato, you have updates and orders from Zomato, but you also have refunds from Zomato. You want to only focus on refunds from Zomato. Technically, yeah. So what we would want is we would want the users to know that you have different emails and the emails get lost. The point of the product is only that you get the essential emails on them. Right? So we divide those into buckets. We don't categorize them by their sender, we categorize them usually by buckets. But we also show them that this much amount of emails you're getting promotional from this particular team and this much amount of emails, because the email addresses are always usually different for the promotional emails and for refund emails. So we will be categorizing based on email names, the email addresses. But we would also want the user to have information about how much amount of emails they are getting from a particular company as well. So that's one thing. Now after the user is able to select the preferences for each email, we will be storing the preferences for those particular emails in our database. And through the database we'll be calling calling. The next part of the problem, which is basically asking the user to schedule calls directly. We'll be jumping to scheduling calls before that. What we can have, which we already had, was that we can have the user. We can ask the user that, do you want the buckets that we have already made to be called to you directly or you want them in a daily digest that we already had? Either call either also WhatsApp is working. We have WhatsApp now. Okay, so huh, so Daily Digest can be directly sent to them through WhatsApp or we can just have a summary call. Now what we want is those emails since this they are categorized under a particular label. All the emails are categorized in different labels and we also have preferences for those particular labels. So we would want those details to be stored in the database and those emails to be passed and summarized based on whatever they are. Those emails will be summarized and those emails would have a transcript generated from the LLN itself. That transcript will be telling Uh11 Labs API or API to call them. That stuff is happening in the back end. We have already asked them the time, we have already asked them everything. These are all the things that will be totally separated in the database and it will just pick the stuff from the database itself. All the fields will be auto populated. It will just have to call. We will be having one scheduler that will be done and we can have that particular thing going on and then all those details will be shown in the dashboard that how much calls, what all details that you have configured currently if you are able to do until this, even if the dashboard is not correct, configurable again or editable later on, even if you're able to do this much amount of work. Basically what we are doing is we are having all your emails and we are calling you based on those emails and sending you a message to WhatsApp or whatever it is. So if you are able to get that, this is the whole ui. So the UI part is kind of sorted in the sense that we don't need any more screens, we just need the same dashboard that we have currently we just need to add one more screen and you just need to add some more details. In most fields that's pretty much it in the backend process. I think in terms of the clarity what we have is that we would want these steps to be made based on whatever we have connection to the database. Then basically the sequences that is that the data transfer is happening. We just want that to be there in the backend that I'll try to take care of through prompts only. But this is going to be the whole process. This is a this is, this is essentially a detailed overview. This is not, this is not like a very very detailed overview because for very very detailed knowing you would need to have those steps mentioned that firstly this happens. Second this happens. Third, this happens for this particular project. And what, what exactly in those steps do you need the data to flow. Can we end this? Can we end this right here? I think of five minutes of transcript in this and some in this. Can I. Can I give this right now to Replit and tell him to before right now make a comment. What is our vision? What is our. What in fact you can do is.